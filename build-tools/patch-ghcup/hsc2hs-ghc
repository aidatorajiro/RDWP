#!/bin/bash

GHCVER=9.10.0.20240413
ARCHID=javascript-unknown-ghcjs

exedir="/home/haskell/.ghcup/ghc/$ARCHID-$GHCVER/lib/$ARCHID-ghc-$GHCVER/bin"
exeprog="./hsc2hs-ghc-$GHCVER"
executablename="/home/haskell/.ghcup/ghc/$ARCHID-$GHCVER/lib/$ARCHID-ghc-$GHCVER/bin/./$ARCHID-hsc2hs-ghc-$GHCVER"
bindir="/home/haskell/.ghcup/ghc/$ARCHID-$GHCVER/bin"
libdir="/home/haskell/.ghcup/ghc/$ARCHID-$GHCVER/lib/$ARCHID-ghc-$GHCVER/lib"
docdir="/home/haskell/.ghcup/ghc/$ARCHID-$GHCVER/share/doc/ghc-$GHCVER"
includedir="/home/haskell/.ghcup/ghc/$ARCHID-$GHCVER/include"

HSC2HS_C=" -Qunused-arguments"

HSC2HS_L=" "

tflag="--template=$libdir/template-hsc.h"
Iflag="-I$includedir/include/"

for f in ${HSC2HS_C}; do
  cflags="${cflags} --cflag=$f"
done

for f in ${HSC2HS_L}; do
  lflags="${lflags} --lflag=$f"
done

HSC2HS_EXTRA="$cflags $lflags"

read_response() {
    response_file=$1
    if [ -f "$response_file" ]; then
        while read -r arg; do
            case "$arg" in
                -t*)          tflag=;;
                --template=*) tflag=;;
                @*)           read_response "${arg#"@"}" ;;
                --)           break;;
            esac
        done < "$response_file"
    fi
}

for arg do
    case "$arg" in
        -t*)          tflag=;;
        --template=*) tflag=;;
        @*)           read_response "${arg#"@"}" ;;
        --)           break;;
    esac
done

exec "$executablename" ${tflag:+"$tflag"} $HSC2HS_EXTRA ${1+"$@"} "$Iflag"
